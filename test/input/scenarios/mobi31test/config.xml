<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
    <module name="ConvergenceStats">
        <param name="activateConvergenceStats" value="true"/>
        <!-- When the convergence criterion function reaches this value the simulation is terminated. 0.0 is the default and disables the convergence criterion termination. Make sure to set a big enough lastIteration param in the controler, since that value is also used as a termination criterion. -->
        <param name="convergenceCriterionFunctionTarget" value="0.0"/>
        <!-- number of iterations to be used for calculating the convergence statistics. If between 0.0 and 1.0 the window is sized as a share of the total number of iterations from the controler. -->
        <param name="iterationWindowSize" value="60.0"/>
        <!-- Possibilities are: kendall,cv,ks_normal -->
        <param name="testsToRun" value="kendall,cv,ks_normal"/>
    </module>

    <module name="PostProcessing">
        <!-- Run Screenline Analysis -->

        <param name="simulationSampleSize" value="0.1"/>
        <param name="linkVolumes" value="true"/>
        <param name="dailylinkVolumes" value="true"/>

        <param name="personAttributes"
               value="subpopulation,pt_subscr,car_available,residence_msr_id,age_cat,current_edu,level_of_employment_cat"/>
        <param name="writeAgentsCSV" value="true"/>
        <param name="writeDefaultAnalysis" value="true"/>
        <param name="writeOutputsInterval" value="1"/>
        <param name="writeVisumPuTSurvey" value="true"/>
        <param name="zoneAttribute" value="zone_id"/>
        <param name="zonesId" value="zones"/>
    </module>
    <module name="SBBAccessTime">
        <param name="attributePrefix" value="at_"/>
        <!-- If true, will add access and egress legs for the specified modes. If false, will use the standard RoutingModules. -->
        <param name="isInsertingAccessEgressWalk" value="true"/>
        <!-- Specifies for which modes access and egress legs are added. -->
        <param name="modesWithAccessTime" value="car,ride"/>
        <!-- Id of the zones to be used to map activities to zones (see 'zones' config group). Zones must contains following attributes 'ACC'+mode. -->
        <param name="zonesId" value="zones"/>
    </module>
    <module name="SBBIntermodal">
        <!-- Zones ID -->
        <param name="zonesId" value="zones"/>
        <parameterset type="mode">
            <!-- If true, the mode will be added as main-mode to be simulated on the road network. -->
            <param name="isRoutedOnNetwork" value="false"/>
            <!-- If true, the mode will be added as main-mode to be simulated on the road network. -->
            <param name="isSimulatedOnNetwork" value="false"/>
            <!-- Mode to use as feeder -->
            <param name="mode" value="walk"/>
            <!-- activities from/to which feeder mode is available -->
            <param name="personActivityFilterAttribute" value="null"/>
            <!-- use minimal transfer times -->
            <param name="useMinimalTransferTimes" value="false"/>
        </parameterset>
        <parameterset type="mode">
            <param name="isRoutedOnNetwork" value="true"/>
            <param name="isSimulatedOnNetwork" value="false"/>
            <param name="mode" value="bike_feeder"/>
            <param name="useMinimalTransferTimes" value="true"/>
        </parameterset>
        <parameterset type="mode">
            <param name="accessTimeZonesAttributeName" value="at_car"/>
            <param name="isRoutedOnNetwork" value="true"/>
            <param name="isSimulatedOnNetwork" value="false"/>
            <param name="mode" value="car_feeder"/>
            <param name="useMinimalTransferTimes" value="true"/>
        </parameterset>
        <parameterset type="mode">
            <param name="accessTimeZonesAttributeName" value="at_ride"/>
            <param name="isRoutedOnNetwork" value="true"/>
            <param name="isSimulatedOnNetwork" value="false"/>
            <param name="mode" value="ride_feeder"/>
            <param name="useMinimalTransferTimes" value="true"/>
        </parameterset>
    </module>
    <module name="SBBNetworkRouting">
        <!-- Teleported modes that are routed with the same disutiliy and travel time as car. Default is [ride] -->
        <param name="networkRoutingModes" value="ride,bike"/>
    </module>

    <module name="SBBPt">
        <!-- (iterationNumber % createLinkEventsInterval) == 0 defines in which iterations linkEnter- and linkLeave-events are created,
                "useful for visualization or analysis purposes. Defaults to 0. `0' disables the creation of events completely. -->
        <param name="createLinkEventsInterval" value="1"/>
        <!-- Leg modes used by the created transit drivers that should be simulated strictly according to the schedule. -->
        <param name="deterministicServiceModes" value="bus,other,rail,tram"/>
    </module>
    <module name="SBBSupply">
        <param name="checkIfTransitNetworkExistsAlready" value="false"/>
        <param name="inputTransitNetworkFile" value="null"/>
    </module>
    <module name="ReplanningAnnealer">
        <param name="activateAnnealingModule" value="true"/>
        <parameterset type="AnnealingVariable">
            <!-- list of config parameters that shall be annealed. Currently supported: globalInnovationRate, BrainExpBeta, PathSizeLogitBeta, learningRate. Default is globalInnovationRate -->
            <param name="annealParameter" value="globalInnovationRate"/>
            <!-- options: linear, exponential, geometric, msa, sigmoid and disabled (no annealing). -->
            <param name="annealType" value="sigmoid"/>
            <!-- subpopulation to have the global innovation rate adjusted. Not applicable when annealing with other parameters. -->
            <param name="defaultSubpopulation" value="regular"/>
            <!-- final annealing value. When the annealing function reaches this value, further results remain constant. -->
            <param name="endValue" value="0.03"/>
            <!-- this parameter enters the exponential and sigmoid formulas. May be an iteration or a share, i.e. 0.5 for halfLife at 50% of iterations. Exponential: startValue / exp(it/halfLife) -->
            <param name="halfLife" value="150.0"/>
            <!-- sigmoid: 1/(1+e^(shapeFactor*(it - halfLife))); geometric: startValue * shapeFactor^it; msa: startValue / it^shapeFactor -->
            <param name="shapeFactor" value="0.05"/>
            <!-- start value for annealing. -->
            <param name="startValue" value="0.6"/>
        </parameterset>
    </module>
    <module name="TimeAllocationMutator">
        <!-- Default:true; Defines whether time mutation changes an activity's duration. -->
        <param name="mutationAffectsDuration" value="true"/>
        <!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
        <param name="mutationRange" value="1800.0"/>
    </module>
    <module name="changeMode">
        <!-- Defines whether car availability is considered be considered or not. An agent has no car only if it has no license, or never access to a car. Default: true -->
        <param name="ignoreCarAvailability" value="true"/>
        <!-- Defines the mode switch behavior. Possible values [fromAllModesToSpecifiedModes, fromSpecifiedModesToSpecifiedModes] Default: fromSpecifiedModesToSpecifiedModes. -->
        <param name="modeSwitchBehavior" value="fromSpecifiedModesToSpecifiedModes"/>
        <!-- Defines all the modes available, including chain-based modes, seperated by commas -->
        <param name="modes" value="car,pt"/>
    </module>
    <module name="controler">
        <!-- Compression algorithm to use when writing out data to files. Possible values: [none, gzip, lz4, zst] -->
        <param name="compressionType" value="gzip"/>
        <!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
        <param name="createGraphs" value="true"/>
        <!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
        <param name="dumpDataAtEnd" value="true"/>
        <!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
        <param name="enableLinkToLinkRouting" value="false"/>
        <!-- Default=xml; Specifies the file format for writing events. Currently supported: [xml, pb, json]
        Multiple values can be specified separated by commas (','). -->
        <param name="eventsFileFormat" value="xml"/>
        <!-- Default=0. First Iteration of a simulation. -->
        <param name="firstIteration" value="0"/>
        <!-- Default=1000. Last Iteration of a simulation. -->
        <param name="lastIteration" value="1"/>
        <!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim hermes
        Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
        For 'qsim', add a module 'qsim' to the config. -->
        <param name="mobsim" value="hermes"/>
        <param name="outputDirectory" value="test/output/mobi-33-test"/>
        <!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
        <param name="overwriteFiles" value="deleteDirectoryIfExists"/>
        <!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
        <param name="routingAlgorithmType" value="FastAStarLandmarks"/>
        <!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
        <param name="runId" value="MOBI33IT"/>
        <!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
        <param name="snapshotFormat" value=""/>
        <!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
        <param name="writeEventsInterval" value="0"/>
        <!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
        <param name="writePlansInterval" value="1"/>
        <!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
        <param name="writeSnapshotsInterval" value="0"/>
        <!-- iterationNumber % writeEventsInterval == 0 defines in which iterations trips CSV are written to a file. `0' disables trips writing completely. -->
        <param name="writeTripsInterval" value="1"/>
    </module>

    <module name="facilities">
        <!-- This defines how facilities should be created. Possible values: none fromFile setInScenario onePerActivityLinkInPlansFile onePerActivityLinkInPlansFileExceptWhenCoordinatesAreGiven onePerActivityLocationInPlansFile  -->
        <param name="facilitiesSource" value="none"/>
        <!-- A prefix to be used for auto-generated IDs. -->
        <param name="idPrefix" value="f_auto_"/>
        <!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
        <param name="inputCRS" value="null"/>
        <param name="inputFacilitiesFile" value="facilities.xml.gz"/>
        <param name="inputFacilityAttributesFile" value="null"/>
        <param name="insistingOnUsingDeprecatedFacilitiesAttributeFile" value="false"/>
    </module>
    <module name="global">
        <param name="coordinateSystem" value="CH1903plus_LV95"/>
        <param name="defaultDelimiter" value=";"/>
        <param name="insistingOnDeprecatedConfigVersion" value="true"/>
        <!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in QSim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
        <param name="numberOfThreads" value="64"/>
        <param name="randomSeed" value="4711"/>
    </module>
    <module name="hermes">
        <!-- Simulation End Time -->
        <param name="endTime" value="32:00:00"/>
        <param name="mainMode" value="car"/>
        <!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. Set to Integer.MAX_VALUE to disable this behavior -->
        <param name="stuckTime" value="30"/>
        <!-- treats PT as deterministic. PT vehicles will run with a steady speed. Should be used with separate network layers for PT and other network modes. -->
        <param name="useDeterministicPt" value="true"/>
    </module>
    <module name="households">
        <param name="inputFile" value="null"/>
        <param name="inputHouseholdAttributesFile" value="null"/>
        <param name="insistingOnUsingDeprecatedHouseholdsAttributeFile" value="false"/>
    </module>
    <module name="linkStats">
        <!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
        <param name="averageLinkStatsOverIterations" value="5"/>
        <!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
        <param name="writeLinkStatsInterval" value="0"/>
    </module>
    <module name="network">
        <!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
        <param name="inputCRS" value="null"/>
        <param name="inputChangeEventsFile" value="null"/>
        <param name="inputNetworkFile" value="network.xml.gz"/>
        <param name="laneDefinitionsFile" value="null"/>
        <param name="timeVariantNetwork" value="false"/>
    </module>
    <module name="parallelEventHandling">
        <!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
        <param name="estimatedNumberOfEvents" value="null"/>
        <!-- Size of the events Queue. Increase for very large scenarios -->
        <param name="eventsQueueSize" value="131072"/>
        <!-- Number of threads for parallel events handler. _null_ means the framework decides by itself. 0 is currently not possible. -->
        <param name="numberOfThreads" value="4"/>
        <!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
        <param name="oneThreadPerHandler" value="true"/>
        <!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
        <param name="synchronizeOnSimSteps" value="false"/>
    </module>
    <module name="parkingCosts">
        <param name="modesWithParkingCosts" value="car,ride"/>
        <param name="activityTypesWithoutParkingCost" value="home"/>
    </module>
    <module name="planCalcScore">
        <!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
        <param name="BrainExpBeta" value="1.0"/>
        <param name="PathSizeLogitBeta" value="1.0"/>
        <!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
        <param name="fractionOfIterationsToStartScoreMSA" value="null"/>
        <!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
        <param name="learningRate" value="1.0"/>
        <!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
        <param name="usingOldScoringBelowZeroUtilityDuration" value="false"/>
        <!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
        <param name="writeExperiencedPlans" value="false"/>
        <parameterset type="scoringParameters">
            <param name="earlyDeparture" value="0.0"/>
            <param name="lateArrival" value="-6.0"/>
            <param name="marginalUtilityOfMoney" value="0.164"/>
            <param name="performing" value="6.0"/>
            <param name="subpopulation" value="null"/>
            <param name="utilityOfLineSwitch" value="-0.0"/>
            <param name="waiting" value="0.0"/>
            <param name="waitingPt" value="0.0"/>

            <parameterset type="modeParams">
                <!-- [utils] alternative-specific constant.  Normally per trip, but that is probably buggy for multi-leg trips. -->
                <param name="constant" value="-0.15"/>
                <!-- [money] daily monetary constant. default=0 to be backwards compatible -->
                <param name="dailyMonetaryConstant" value="0.0"/>
                <!-- [utils] daily utility constant. default=0 to be backwards compatible -->
                <param name="dailyUtilityConstant" value="0.0"/>
                <!-- [utils/m] utility of traveling (e.g. walking or driving) per m, normally negative.  this is on top of the time (dis)utility. -->
                <param name="marginalUtilityOfDistance_util_m" value="0.0"/>
                <!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
                <param name="marginalUtilityOfTraveling_util_hr" value="-1.25"/>
                <param name="mode" value="car"/>
                <!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
                <param name="monetaryDistanceRate" value="0.0"/>
            </parameterset>
            <parameterset type="modeParams">
                <param name="constant" value="-0.84"/>
                <param name="dailyMonetaryConstant" value="0.0"/>
                <param name="dailyUtilityConstant" value="0.0"/>
                <param name="marginalUtilityOfDistance_util_m" value="0.0"/>
                <param name="marginalUtilityOfTraveling_util_hr" value="-3"/>
                <param name="mode" value="ride"/>
                <param name="monetaryDistanceRate" value="0.0"/>
            </parameterset>
            <parameterset type="modeParams">
                <param name="constant" value="-0.05"/>
                <param name="dailyMonetaryConstant" value="0.0"/>
                <param name="dailyUtilityConstant" value="0.0"/>
                <param name="marginalUtilityOfDistance_util_m" value="0.0"/>
                <param name="marginalUtilityOfTraveling_util_hr" value="-0.0"/>
                <param name="mode" value="pt"/>
                <param name="monetaryDistanceRate" value="0.0"/>
            </parameterset>
            <parameterset type="modeParams">
                <param name="constant" value="0.0"/>
                <param name="dailyMonetaryConstant" value="0.0"/>
                <param name="dailyUtilityConstant" value="0.0"/>
                <param name="marginalUtilityOfDistance_util_m" value="0.0"/>
                <param name="marginalUtilityOfTraveling_util_hr" value="0.0"/>
                <param name="mode" value="walk"/>
                <param name="monetaryDistanceRate" value="0.0"/>
            </parameterset>
            <parameterset type="modeParams">
                <param name="constant" value="0.0"/>
                <param name="dailyMonetaryConstant" value="0.0"/>
                <param name="dailyUtilityConstant" value="0.0"/>
                <param name="marginalUtilityOfDistance_util_m" value="0.0"/>
                <param name="marginalUtilityOfTraveling_util_hr" value="-5.0"/>
                <param name="mode" value="car_feeder"/>
                <param name="monetaryDistanceRate" value="0.0"/>
            </parameterset>
            <parameterset type="modeParams">
                <param name="constant" value="0.0"/>
                <param name="dailyMonetaryConstant" value="0.0"/>
                <param name="dailyUtilityConstant" value="0.0"/>
                <param name="marginalUtilityOfDistance_util_m" value="0.0"/>
                <param name="marginalUtilityOfTraveling_util_hr" value="-4.0"/>
                <param name="mode" value="ride_feeder"/>
                <param name="monetaryDistanceRate" value="0.0"/>
            </parameterset>
            <parameterset type="modeParams">
                <param name="constant" value="0.0"/>
                <param name="dailyMonetaryConstant" value="0.0"/>
                <param name="dailyUtilityConstant" value="0.0"/>
                <param name="marginalUtilityOfDistance_util_m" value="0.0"/>
                <param name="marginalUtilityOfTraveling_util_hr" value="7.0"/>
                <param name="mode" value="bike_feeder"/>
                <param name="monetaryDistanceRate" value="0.0"/>
            </parameterset>
            <parameterset type="modeParams">
                <param name="constant" value="0.25"/>
                <param name="dailyMonetaryConstant" value="0.0"/>
                <param name="dailyUtilityConstant" value="0.0"/>
                <param name="marginalUtilityOfDistance_util_m" value="0.0"/>
                <param name="marginalUtilityOfTraveling_util_hr" value="-0.0"/>
                <param name="mode" value="walk_main"/>
                <param name="monetaryDistanceRate" value="0.0"/>
            </parameterset>
            <parameterset type="modeParams">
                <param name="constant" value="-0.0"/>
                <param name="dailyMonetaryConstant" value="0.0"/>
                <param name="dailyUtilityConstant" value="0.0"/>
                <param name="marginalUtilityOfDistance_util_m" value="0.0"/>
                <param name="marginalUtilityOfTraveling_util_hr" value="0.0"/>
                <param name="mode" value="bike"/>
                <param name="monetaryDistanceRate" value="0.0"/>
            </parameterset>
        </parameterset>
    </module>
    <module name="plans">
        <!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
        <param name="activityDurationInterpretation" value="minOfDurationAndEndTime"/>
        <!-- Possible values: reject, useMainModeIdentifier -->
        <param name="handlingOfPlansWithoutRoutingMode" value="reject"/>
        <!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
        <param name="inputCRS" value="null"/>
        <param name="inputPersonAttributesFile" value="null"/>
        <param name="inputPlansFile" value="population_mobi_33.xml.gz"/>
        <param name="insistingOnUsingDeprecatedPersonAttributeFile" value="false"/>
        <!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
        <param name="networkRouteType" value="LinkNetworkRoute"/>
        <!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false. Use with Caution! -->
        <param name="removingUnnecessaryPlanAttributes" value="false"/>
    </module>
    <module name="planscalcroute">
        <!-- Some typical teleportation routing params are set by default, such as for walk and bike.  Setting this switch to "true" will clear them.  Note that this will also clear settings for helper modes such as for non_network_walk -->
        <param name="clearDefaultTeleportedModeParams" value="false"/>
        <!-- All the modes for which the router is supposed to generate network routes (like car) -->
        <param name="networkModes" value="car,ride,ride_feeder,car_feeder,bike"/>
        <!-- strength of the randomness for the utility of money in routing under toll.  Leads to Pareto-optimal route with randomly drawn money-vs-other-attributes tradeoff. Technically the width parameter of a log-normal distribution. 3.0 seems to be a good value.  -->
        <param name="routingRandomness" value="3.0"/>
        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="1.3"/>
            <param name="mode" value="walk"/>
            <param name="teleportedModeFreespeedFactor" value="null"/>
            <param name="teleportedModeSpeed" value="1.3055555556"/>
        </parameterset>
        <parameterset type="teleportedModeParameters">
            <param name="beelineDistanceFactor" value="1.3"/>
            <param name="mode" value="walk_main"/>
            <param name="teleportedModeFreespeedFactor" value="null"/>
            <param name="teleportedModeSpeed" value="1.3055555556"/>
        </parameterset>
    </module>

    <module name="qsim">
        <param name="endTime" value="32:00:00"/>
        <!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
        <param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="true"/>
        <!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
        <param name="isRestrictingSeepage" value="true"/>
        <!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
        <param name="isSeepModeStorageFree" value="false"/>
        <!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
        <param name="linkDynamics" value="FIFO"/>
        <!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
        <param name="linkWidth" value="30.0"/>
        <!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
        <param name="mainMode" value="car"/>
        <!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
        <param name="nodeOffset" value="0.0"/>
        <!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
        <param name="numberOfThreads" value="18"/>
        <!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
        <param name="removeStuckVehicles" value="false"/>
        <!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
        <param name="seepMode" value="bike"/>
        <!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
        <param name="simEndtimeInterpretation" value="null"/>
        <!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
        <param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd"/>
        <!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
        <param name="snapshotStyle" value="equiDist"/>
        <param name="snapshotperiod" value="00:00:00"/>
        <param name="startTime" value="00:00:00"/>
        <!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
        <param name="stuckTime" value="40.0"/>
        <param name="timeStepSize" value="00:00:01"/>
        <!-- options: queue withHoles kinematicWaves  -->
        <param name="trafficDynamics" value="queue"/>
        <!-- Set this parameter to true if lanes should be used, false if not. -->
        <param name="useLanes" value="false"/>
        <!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
        <param name="usePersonIdForMissingVehicleId" value="true"/>
        <!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
        <param name="usingFastCapacityUpdate" value="false"/>
        <!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
        <param name="vehicleBehavior" value="teleport"/>
        <!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
        <param name="vehiclesSource" value="defaultVehicle"/>
    </module>
    <module name="strategy">
        <!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
        <param name="ExternalExeConfigTemplate" value="null"/>
        <!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
        <param name="ExternalExeTimeOut" value="3600"/>
        <!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
        <param name="ExternalExeTmpFileRootDir" value="null"/>
        <!-- fraction of iterations where innovative strategies are switched off.  Something like 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
        <param name="fractionOfIterationsToDisableInnovation" value="1.0"/>
        <!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
        <param name="maxAgentPlanMemorySize" value="4"/>
        <!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
        <param name="planSelectorForRemoval" value="WorstPlanSelector"/>
        <parameterset type="strategysettings">
            <!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
            <param name="disableAfterIteration" value="-1"/>
            <!-- path to external executable (if applicable) -->
            <param name="executionPath" value="null"/>
            <!-- strategyName of strategy.  Possible default names: SelectRandom BestScore KeepLastSelected ChangeExpBeta SelectExpBeta SelectPathSizeLogit      (selectors), ReRouteTimeAllocationMutatorTimeAllocationMutator_ReRouteChangeSingleTripModeChangeTripModeSubtourModeChoice (innovative strategies). -->
            <param name="strategyName" value="ChangeExpBeta"/>
            <!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
            <param name="subpopulation" value="regular"/>
            <!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
            <param name="weight" value="0.7"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="disableAfterIteration" value="-1"/>
            <param name="executionPath" value="null"/>
            <param name="strategyName" value="SBBTimeMutation_ReRoute"/>
            <param name="subpopulation" value="regular"/>
            <param name="weight" value="0.1"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="disableAfterIteration" value="-1"/>
            <param name="executionPath" value="null"/>
            <param name="strategyName" value="ReRoute"/>
            <param name="subpopulation" value="regular"/>
            <param name="weight" value="0.05"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="disableAfterIteration" value="-1"/>
            <param name="executionPath" value="null"/>
            <param name="strategyName" value="SubtourModeChoice"/>
            <param name="subpopulation" value="regular"/>
            <param name="weight" value="0.15"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="disableAfterIteration" value="-1"/>
            <param name="executionPath" value="null"/>
            <param name="strategyName" value="ChangeExpBeta"/>
            <param name="subpopulation" value="cb_road"/>
            <param name="weight" value="0.95"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="disableAfterIteration" value="-1"/>
            <param name="executionPath" value="null"/>
            <param name="strategyName" value="ReRoute"/>
            <param name="subpopulation" value="cb_road"/>
            <param name="weight" value="0.05"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="disableAfterIteration" value="-1"/>
            <param name="executionPath" value="null"/>
            <param name="strategyName" value="ChangeExpBeta"/>
            <param name="subpopulation" value="cb_rail"/>
            <param name="weight" value="1.0"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="disableAfterIteration" value="-1"/>
            <param name="executionPath" value="null"/>
            <param name="strategyName" value="ChangeExpBeta"/>
            <param name="subpopulation" value="tourism_rail"/>
            <param name="weight" value="1.0"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="disableAfterIteration" value="-1"/>
            <param name="executionPath" value="null"/>
            <param name="strategyName" value="ChangeExpBeta"/>
            <param name="subpopulation" value="airport_rail"/>
            <param name="weight" value="1.0"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="disableAfterIteration" value="-1"/>
            <param name="executionPath" value="null"/>
            <param name="strategyName" value="ChangeExpBeta"/>
            <param name="subpopulation" value="freight_road"/>
            <param name="weight" value="0.95"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="disableAfterIteration" value="-1"/>
            <param name="executionPath" value="null"/>
            <param name="strategyName" value="ReRoute"/>
            <param name="subpopulation" value="freight_road"/>
            <param name="weight" value="0.05"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="disableAfterIteration" value="-1"/>
            <param name="executionPath" value="null"/>
            <param name="strategyName" value="ChangeExpBeta"/>
            <param name="subpopulation" value="airport_road"/>
            <param name="weight" value="0.95"/>
        </parameterset>
        <parameterset type="strategysettings">
            <param name="disableAfterIteration" value="-1"/>
            <param name="executionPath" value="null"/>
            <param name="strategyName" value="ReRoute"/>
            <param name="subpopulation" value="airport_road"/>
            <param name="weight" value="0.05"/>
        </parameterset>
    </module>
    <module name="subtourModeChoice">
        <!-- Only for backwards compatibility.  Defines if only trips from modes list should change mode, or all trips.  Options: fromAllModesToSpecifiedModes fromSpecifiedModesToSpecifiedModes  -->
        <param name="behavior" value="fromSpecifiedModesToSpecifiedModes"/>
        <!-- Defines the chain-based modes, seperated by commas -->
        <param name="chainBasedModes" value="car,bike"/>
        <!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
        <param name="considerCarAvailability" value="true"/>
        <!-- Defines all the modes available, including chain-based modes, seperated by commas -->
        <param name="modes" value="car,pt,bike,walk_main,ride"/>
    </module>
    <module name="swissRailRaptor">
        <!-- Sets whether intermodal access and egress modes are selected by least cost (default) or randomly chosen out of the available access / egress modes. -->
        <param name="intermodalAccessEgressModeSelection"
               value="RandomSelectOneModePerRoutingRequestAndDirection"/>
        <!-- Possible values: Default, Individual -->
        <param name="scoringParameters" value="Default"/>
        <param name="transferPenaltyBaseCost" value="-0.05"/>
        <param name="transferPenaltyCostPerTravelTimeHour" value="0.475"/>
        <param name="transferPenaltyMaxCost" value="0.8"/>
        <param name="transferPenaltyMinCost" value="0.02"/>
        <!-- time deducted from transfer walk leg during transfers between pt legs in order to avoid missing a vehicle by a few seconds due to delays. -->
        <param name="transferWalkMargin" value="5.0"/>
        <!-- If true, SwissRailRaptor tries to detect when agents cannot board a vehicle in the previous iteration because it is already full and tries to find an alternative route instead. -->
        <param name="useCapacityConstraints" value="false"/>
        <param name="useIntermodalAccessEgress" value="true"/>
        <param name="useModeMappingForPassengers" value="false"/>
        <param name="useRangeQuery" value="false"/>
        <parameterset type="intermodalAccessEgress">
            <!-- Radius from the origin / destination coord in which transit stops are searched. Only if less than 2 transit stops are found the search radius is increased step-wise until the maximum search radius set in param radius is reached. -->
            <param name="initialSearchRadius" value="2500.0"/>
            <!-- If the mode is routed on the network, specify which linkId acts as access link to this stop in the transport modes sub-network. -->
            <param name="linkIdAttribute" value="null"/>
            <!-- Radius from the origin / destination coord in which transit stops are accessible by this mode. -->
            <param name="maxRadius" value="3000.0"/>
            <param name="mode" value="walk"/>
            <!-- Name of the person attribute used to figure out if this access/egress mode is available to the person. -->
            <param name="personFilterAttribute" value="null"/>
            <!-- Only persons where the filter attribute has the value specified here can use this mode for access or egress. The attribute should be of type String. -->
            <param name="personFilterValue" value="null"/>
            <!-- If less than 2 stops were found in initialSearchRadius take the distance of the closest transit stop and add this extension radius to search again.The search radius will not exceed the maximum search radius set in param radius. -->
            <param name="searchExtensionRadius" value="500.0"/>
            <!-- Name of the transit stop attribute used to filter stops that should be included in the set of potential stops for access and egress. The attribute should be of type String. 'null' disables the filter and all stops within the specified radius will be used. -->
            <param name="stopFilterAttribute" value="null"/>
            <!-- Only stops where the filter attribute has the value specified here will be considered as access or egress stops. -->
            <param name="stopFilterValue" value="null"/>
        </parameterset>
        <parameterset type="intermodalAccessEgress">
            <param name="initialSearchRadius" value="3500.0"/>
            <param name="linkIdAttribute" value="accessLinkId"/>
            <param name="maxRadius" value="4000.0"/>
            <param name="mode" value="bike_feeder"/>
            <param name="searchExtensionRadius" value="500.0"/>
            <param name="stopFilterAttribute" value="bikeFeederAccessible"/>
            <param name="stopFilterValue" value="1"/>
            <param name="personFilterAttribute" value="bike2pt"/>
            <param name="personFilterValue" value="1"/>
        </parameterset>
        <parameterset type="intermodalAccessEgress">
            <param name="initialSearchRadius" value="5000.0"/>
            <param name="linkIdAttribute" value="accessLinkId"/>
            <param name="maxRadius" value="15000.0"/>
            <param name="mode" value="car_feeder"/>
            <param name="searchExtensionRadius" value="10000.0"/>
            <param name="stopFilterAttribute" value="carFeederAccessible"/>
            <param name="stopFilterValue" value="1"/>
            <param name="personFilterAttribute" value="car2pt"/>
            <param name="personFilterValue" value="1"/>
        </parameterset>
        <parameterset type="intermodalAccessEgress">
            <param name="initialSearchRadius" value="5000.0"/>
            <param name="linkIdAttribute" value="accessLinkId"/>
            <param name="maxRadius" value="15000.0"/>
            <param name="mode" value="ride_feeder"/>
            <param name="searchExtensionRadius" value="10000.0"/>
            <param name="stopFilterAttribute" value="rideFeederAccessible"/>
            <param name="stopFilterValue" value="1"/>
            <param name="personFilterAttribute" value="ride2pt"/>
            <param name="personFilterValue" value="1"/>
        </parameterset>
    </module>
    <module name="transit">
        <!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
        <param name="inputScheduleCRS" value="null"/>
        <param name="insistingOnUsingDeprecatedAttributeFiles" value="false"/>
        <!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
        <param name="transitLinesAttributesFile" value="null"/>
        <!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
        <param name="transitModes" value="pt"/>
        <!-- Input file containing the transit schedule to be simulated. -->
        <param name="transitScheduleFile" value="transitSchedule.xml.gz"/>
        <!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
        <param name="transitStopsAttributesFile" value="null"/>
        <!-- Set this parameter to true if transit should be simulated, false if not. -->
        <param name="useTransit" value="true"/>
        <param name="usingTransitInMobsim" value="true"/>
        <!-- Input file containing the vehicles used by the departures in the transit schedule. -->
        <param name="vehiclesFile" value="transitVehicles.xml.gz"/>
    </module>
    <module name="transitRouter">
        <!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
        <param name="additionalTransferTime" value="30.0"/>
        <!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
        <param name="directWalkFactor" value="1.0"/>
        <!-- step size to increase searchRadius if no stops are found -->
        <param name="extensionRadius" value="200.0"/>
        <!-- maximum beeline distance between stops that agents could transfer to by walking -->
        <param name="maxBeelineWalkConnectionDistance" value="300.0"/>
        <!-- the radius in which stop locations are searched, given a start or target coordinate -->
        <param name="searchRadius" value="1000.0"/>
    </module>
    <module name="travelTimeCalculator">
        <!-- (only for backwards compatibility; only used if separateModes==false && + filterModes==true)  Transport modes that will be respected by the travel time collector. 'car' is default which includes also buses from the pt simulation module. -->
        <param name="analyzedModes" value="car"/>
        <param name="calculateLinkToLinkTravelTimes" value="false"/>
        <param name="calculateLinkTravelTimes" value="true"/>
        <!-- (only for backwards compatiblity; only used if separateModes==false)  Only modes included in analyzedModes are included. -->
        <param name="filterModes" value="false"/>
        <!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
        <param name="maxTime" value="108000"/>
        <!-- (only for backwards compatibility) If false, link travel times are measured and aggregated over all vehicles using the link. -->
        <param name="separateModes" value="false"/>
        <!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
        <param name="travelTimeAggregator" value="optimistic"/>
        <!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
        <param name="travelTimeBinSize" value="900"/>
        <!-- possible values: TravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
        <param name="travelTimeCalculator" value="TravelTimeCalculatorArray"/>
        <!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
        <param name="travelTimeGetter" value="average"/>
    </module>
    <module name="vehicles">
        <param name="vehiclesFile" value="vehicles.xml"/>
    </module>
    <module name="vspExperimental">
        <!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
        <param name="isAbleToOverwritePtInteractionParams" value="false"/>
        <param name="isGeneratingBoardingDeniedEvent" value="false"/>
        <!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
        <param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true"/>
        <param name="logitScaleParamForPlansRemoval" value="1.0"/>
        <!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
        <param name="vspDefaultsCheckingLevel" value="ignore"/>
        <!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
        <param name="writingOutputEvents" value="true"/>
    </module>
    <module name="zones">
        <parameterset type="zones">
            <param name="filename" value="zones/andermatt-zones.shp"/>
            <param name="id" value="zones"/>
            <param name="idAttributeName" value="zone_id"/>
        </parameterset>
    </module>

    <module name="SBBCapacityDependentRouting">
        <param name="useServiceQuality" value="true"/>
        <param name="minimumCostFactor" value="0.8"/>
        <param name="maximumCostFactor" value="1.2"/>
        <param name="lowerCapacityLimit" value="0.0"/>
        <param name="higherCapacityLimit" value="0.7"/>
    </module>

</config>